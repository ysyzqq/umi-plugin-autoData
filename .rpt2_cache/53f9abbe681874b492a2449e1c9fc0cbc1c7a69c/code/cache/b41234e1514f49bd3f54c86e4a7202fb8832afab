{"code":"import { join, dirname } from 'path';\r\nimport { writeFileSync, readFileSync } from 'fs';\r\nimport { findJS } from 'umi-utils';\r\nexport default function UmiPluginApollo(api, opts) {\r\n    var paths = api.paths, winPath = api.winPath;\r\n    api.register('addRendererWrapperWithComponent', function (_a) {\r\n        var memo = _a.memo, args = _a.args;\r\n        var content = \"\\n            export default function Apollo(props){\\n                return (\\n                    <div className=\\\"apollo\\\">{props.children}</div>\\n                )\\n            }\\n        \".trim();\r\n        var apolloPath = join(paths.absTmpDirPath, './ApolloClient.js');\r\n        writeFileSync(apolloPath, content, 'utf-8');\r\n        return memo.concat([apolloPath]);\r\n    });\r\n    api.register('onGenerateFiles', function () {\r\n        writeFileSync(join(paths.absTmpDirPath, './autoData.js'), readFileSync(join(__dirname, './autoData.js'), { encoding: 'utf-8' }), 'utf-8');\r\n    });\r\n    api.register('addRouterImport', function (_a) {\r\n        var memo = _a.memo;\r\n        return memo.concat([{\r\n                source: './autoData.js',\r\n                specifier: 'autoData',\r\n            }]);\r\n    });\r\n    api.register('modifyRouteComponent', function (_a) {\r\n        var memo = _a.memo, args = _a.args;\r\n        var importPath = args.importPath, webpackChunkName = args.webpackChunkName;\r\n        api.log.info(\"ImportPath: \" + importPath + \"; WebpackChunkName: \" + webpackChunkName + \"; Component: \" + memo);\r\n        if (!webpackChunkName) { // 已经动态导入了\r\n            return memo;\r\n        }\r\n        var extendStr = '';\r\n        if (opts.dynamicImport.webpackChunkName) {\r\n            extendStr = \"/* webpackChunkName: ^\" + webpackChunkName + \"^ */\";\r\n        }\r\n        var ret = (\"\\n            autoData(<%= AUTODATACONFIG %>)(\\n                require(\" + extendStr + \"'\" + importPath + \"').default,\\n            )\\n          \").trim();\r\n        var configJs = findJS(dirname(join(paths.absTmpDirPath, importPath)), 'config');\r\n        if (configJs) {\r\n            ret = ret.replace('<%= AUTODATACONFIG %>', (\"\\n                require('\" + winPath(configJs) + \"').default || ''\\n            \").trim());\r\n        }\r\n        return ret.replace('<%= AUTODATACONFIG %>', '');\r\n    });\r\n}\r\n"}
